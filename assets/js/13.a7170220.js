(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{370:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"编写注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写注释"}},[t._v("#")]),t._v(" 编写注释")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("由于API接口文档根据解析代码中的注释生成，需按照一定的书写规则来生成")])]),t._v(" "),a("h2",{attrs:{id:"书写规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#书写规范"}},[t._v("#")]),t._v(" 书写规范")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("书写参数时有如下几个规范")]),t._v(" "),a("ul",[a("li",[t._v("每个参数书写在一行")]),t._v(" "),a("li",[t._v("每个参数以 @+参数名，用空格 与参数值隔开 如  * @参数名 参数值")]),t._v(" "),a("li",[t._v("参数值与数据表字段注释的内容，避免出现 空格 或 : (冒号)")])])]),t._v(" "),a("h2",{attrs:{id:"参数说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数说明"}},[t._v("#")]),t._v(" 参数说明")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数名")]),t._v(" "),a("th",[t._v("参数值")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("书写规范")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("title")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("接口名称")]),t._v(" "),a("td",[t._v("任意字符")])]),t._v(" "),a("tr",[a("td",[t._v("desc")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("接口说明")]),t._v(" "),a("td",[t._v("任意字符")])]),t._v(" "),a("tr",[a("td",[t._v("author")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("作者")]),t._v(" "),a("td",[t._v("任意字符")])]),t._v(" "),a("tr",[a("td",[t._v("url")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("真实的接口URL")]),t._v(" "),a("td",[t._v("任意字符")])]),t._v(" "),a("tr",[a("td",[t._v("method")]),t._v(" "),a("td",[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("POST")]),t._v(" "),a("code",[t._v("PUT")]),t._v(" "),a("code",[t._v("DELETE")])]),t._v(" "),a("td",[t._v("请求类型")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("tag")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("接口Tag标签")]),t._v(" "),a("td",[t._v("多个标签用 空格隔开")])]),t._v(" "),a("tr",[a("td",[t._v("header")]),t._v(" "),a("td",[t._v("具体查看 "),a("RouterLink",{attrs:{to:"/use/#header-的参数"}},[t._v("header的参数")])],1),t._v(" "),a("td",[t._v("请求头Headers参数")]),t._v(" "),a("td",[t._v("可定义多个，每个一行，每个属性用空格隔开")])]),t._v(" "),a("tr",[a("td",[t._v("param")]),t._v(" "),a("td",[t._v("具体查看 "),a("RouterLink",{attrs:{to:"/use/#param、return-的参数"}},[t._v("param、return的参数")])],1),t._v(" "),a("td",[t._v("请求参数")]),t._v(" "),a("td",[t._v("可定义多个，每个一行，每个属性用空格隔开")])]),t._v(" "),a("tr",[a("td",[t._v("return")]),t._v(" "),a("td",[t._v("具体查看 "),a("RouterLink",{attrs:{to:"/use/#param、return-的参数"}},[t._v("param、return的参数")])],1),t._v(" "),a("td",[t._v("响应结果")]),t._v(" "),a("td",[t._v("可定义多个，每个一行，每个属性用空格隔开")])])])]),t._v(" "),a("h3",{attrs:{id:"header-的参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#header-的参数"}},[t._v("#")]),t._v(" header 的参数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数名")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("书写规范")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("name")]),t._v(" "),a("td",[t._v("参数的字段名")]),t._v(" "),a("td",[t._v("如：name:Authorization")])]),t._v(" "),a("tr",[a("td",[t._v("require")]),t._v(" "),a("td",[t._v("是否必填")]),t._v(" "),a("td",[t._v("如：require:1 为必填")])]),t._v(" "),a("tr",[a("td",[t._v("default")]),t._v(" "),a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("如：default:123")])]),t._v(" "),a("tr",[a("td",[t._v("desc")]),t._v(" "),a("td",[t._v("字段说明")]),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"param、return-的参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#param、return-的参数"}},[t._v("#")]),t._v(" param、return 的参数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数名")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("书写规范")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("name")]),t._v(" "),a("td",[t._v("参数的字段名")]),t._v(" "),a("td",[t._v("如：name:username，如直接使用ref引入某个定义，可不配置name")])]),t._v(" "),a("tr",[a("td",[t._v("type")]),t._v(" "),a("td",[t._v("字段类型")]),t._v(" "),a("td",[a("code",[t._v("int")]),t._v(" "),a("code",[t._v("string")]),t._v(" "),a("code",[t._v("boolean")]),t._v(" "),a("code",[t._v("object")]),t._v(" "),a("code",[t._v("array")]),t._v(" "),a("code",[t._v("tree")])])]),t._v(" "),a("tr",[a("td",[t._v("require")]),t._v(" "),a("td",[t._v("是否必填")]),t._v(" "),a("td",[t._v("如：require:1 为必填")])]),t._v(" "),a("tr",[a("td",[t._v("default")]),t._v(" "),a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("如：default:123")])]),t._v(" "),a("tr",[a("td",[t._v("desc")]),t._v(" "),a("td",[t._v("字段说明")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ref")]),t._v(" "),a("td",[t._v("引入定义的路径，可引入全局定义、服务层方法类、模型方法")]),t._v(" "),a("td",[a("div",[t._v("如：ref:definitions\\pagingParam")]),a("div",[t._v("或：ref:app\\services\\ApiDocTest\\get")]),a("div",[t._v("或：ref:app\\model\\Apps\\getList")])])]),t._v(" "),a("tr",[a("td",[t._v("field")]),t._v(" "),a("td",[t._v("当ref配置为引入模型字段时，用field来指定引入的字段")]),t._v(" "),a("td",[t._v("如：field:id,username,nickname ；则只会引入模型的 id,username,nickname字段")])]),t._v(" "),a("tr",[a("td",[t._v("withoutField")]),t._v(" "),a("td",[t._v("当ref配置为引入模型字段时，用withoutField来指定过滤掉的字段")]),t._v(" "),a("td",[t._v("如：withoutField:id,username,nickname；则引入模型除 id,username,nickname字段外的所有字段")])]),t._v(" "),a("tr",[a("td",[t._v("params")]),t._v(" "),a("td",[t._v("字段类型为"),a("code",[t._v("object")]),t._v("或"),a("code",[t._v("array")]),t._v("，给其定义子节点参数")]),t._v(" "),a("td",[t._v("如：params:id int 1 唯一id,name:string 0 姓名")])]),t._v(" "),a("tr",[a("td",[t._v("childrenField")]),t._v(" "),a("td",[t._v("字段类型为"),a("code",[t._v("tree")]),t._v("时，给其定义子节点字段名")]),t._v(" "),a("td",[t._v("默认为 children")])]),t._v(" "),a("tr",[a("td",[t._v("childrenDesc")]),t._v(" "),a("td",[t._v("字段类型为"),a("code",[t._v("tree")]),t._v("时，给其定义子节点字段名的备注")]),t._v(" "),a("td")])])]),t._v(" "),a("h2",{attrs:{id:"控制器注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制器注释"}},[t._v("#")]),t._v(" 控制器注释")]),t._v(" "),a("p",[t._v("1、接口文档将按照在配置文件"),a("code",[t._v("/config/apidoc.php")]),t._v("中配置的 controllers 控制器列表，来生成.")]),t._v(" "),a("p",[t._v("若你希望 某个控制器被解析，那么首先在配置项中加入该控制器，如下：")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// config/apidoc.php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 app\\controller\\ApiDocTest.php 控制器加入配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'controllers'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'controller\\\\ApiDocTest'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("2、为控制器加上一些注释，以让文档可读性更高（当然这不是必须的）")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("controller")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @title Api接口文档测试\n * @controller ApiDocTest\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApiDocTest")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...    ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),a("h4",{attrs:{id:"控制器注释参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制器注释参数"}},[t._v("#")]),t._v(" 控制器注释参数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数名")]),t._v(" "),a("th",[t._v("参数值")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("title")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("控制器名称")])]),t._v(" "),a("tr",[a("td",[t._v("controller")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("控制器")])]),t._v(" "),a("tr",[a("td",[t._v("group")]),t._v(" "),a("td",[t._v("定义在配置文件 groups 中分组的name")]),t._v(" "),a("td",[t._v("所属分组")])])])]),t._v(" "),a("p",[t._v("此时刷新文档页面，得到一个控制器被解析")]),t._v(" "),a("img",{staticClass:"img-view",staticStyle:{width:"100%"},attrs:{src:t.$withBase("/images/apidoc-controller-demo.png"),alt:"apidoc-controller-demo"}}),t._v(" "),a("h2",{attrs:{id:"接口注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接口注释"}},[t._v("#")]),t._v(" 接口注释")]),t._v(" "),a("p",[t._v("控制器中的每一个符合注释规则的方法都会被解析成一个API接口")]),t._v(" "),a("h3",{attrs:{id:"基础注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础注释"}},[t._v("#")]),t._v(" 基础注释")]),t._v(" "),a("p",[t._v("先来体验一个最基本的注释，所得到的结果")]),t._v(" "),a("p",[t._v("我们在控制器中加入如下方法，如下")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("controller")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @title Api接口文档测试\n * @controller ApiDocTest\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApiDocTest")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @title 基础的注释方法\n     * @desc 最基础的接口注释写法\n     * @author HG\n     * @url /apidocTest/base\n     * @method GET\n     * @tag 测试 基础\n     * @header name:Authorization require:1 desc:Token\n     * @param name:username type:string require:1 desc:用户名\n     * @param name:password type:string require:1 desc:登录密码MD5\n     * @param name:phone type:string require:1 desc:手机号\n     * @param name:sex type:int require:0 default:0 desc:性别\n     * @return name:id type:int desc:新增用户的id\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),a("p",[t._v("以上注释，我们得到的效果如下\n"),a("img",{staticClass:"img-view",staticStyle:{width:"100%"},attrs:{src:t.$withBase("/images/apidoc-api-base-demo.png"),alt:"apidoc-api-base-demo"}})]),t._v(" "),a("h3",{attrs:{id:"通用注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用注释"}},[t._v("#")]),t._v(" 通用注释")]),t._v(" "),a("p",[t._v("通过定义通用的公共注释参数来实现 可复用性，避免每个接口都定义一大堆同样的参数")]),t._v(" "),a("h4",{attrs:{id:"_1、增加配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、增加配置"}},[t._v("#")]),t._v(" 1、增加配置")]),t._v(" "),a("p",[t._v("首先，在配置文件 config/apidoc.php 配置文件中，指定一个控制器为定义公共注释的控制器")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// config/apidoc.php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定公共注释定义的文件地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'definitions'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"app\\controller\\Definitions"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("h4",{attrs:{id:"_2、定义通用注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、定义通用注释"}},[t._v("#")]),t._v(" 2、定义通用注释")]),t._v(" "),a("p",[t._v("添加一些通用的方法及注释，（定义param 与return 参数与定义接口书写规则一致）")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("controller")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Definitions")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @title 获取分页数据列表的参数\n     * @param name:pageIndex type:int require:0 default:0 desc:查询页数\n     * @param name:pageSize type:int require:0 default:20 desc:查询条数\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pagingParam")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @title 返回字典数据\n     * @return name:id type:int desc:唯一id\n     * @return name:name type:string desc:字典名\n     * @return name:value type:string desc:字典值\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dictionary")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),a("h4",{attrs:{id:"_3、使用定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、使用定义"}},[t._v("#")]),t._v(" 3、使用定义")]),t._v(" "),a("p",[t._v("在接口注释中的 param 与 retrun 可通过 ref:definitions\\XXX 来指定引入的 通用注释")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("controller")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApiDocTest")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @title 引入定义注释\n     * @desc 引入通用注释所定义的通用参数\n     * @author HG\n     * @url /apidocTest/definitions\n     * @method POST\n     * @param name:page type:object ref:definitions\\pagingParam desc:分页参数\n     * @param ref:definitions\\pagingParam\n     * @return name:list type:array ref:definitions\\dictionary\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("definitions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("以上param用了两种方式引入，分别是参数指定 字段名 name与 type ，与不指定字段名")]),t._v(" "),a("ul",[a("li",[t._v("指定字段名：会将引入的参数在该字段属性下，如下效果")]),t._v(" "),a("li",[t._v("不指定字段名：直接引入所有参数")])])]),t._v(" "),a("p",[t._v("效果如下\n"),a("img",{staticClass:"img-view",staticStyle:{width:"100%"},attrs:{src:t.$withBase("/images/apidoc-api-dictionary-demo.png"),alt:"apidoc-api-dictionary-demo"}})]),t._v(" "),a("h3",{attrs:{id:"逻辑层注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑层注释"}},[t._v("#")]),t._v(" 逻辑层注释")]),t._v(" "),a("p",[t._v("在实际开发中，控制器只对参数做基础校验等处理，实际的业务逻辑处理通常会分层给逻辑层来处理（我这里把业务逻辑层叫service，您也可以根据自己开发来定义 业务逻辑层），我们可直接引入业务逻辑层的注释来实现接口参数的定义")]),t._v(" "),a("h4",{attrs:{id:"增加业务逻辑层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#增加业务逻辑层"}},[t._v("#")]),t._v(" 增加业务逻辑层")]),t._v(" "),a("p",[t._v("1、在项目 app 目录下新建 service 文件夹（您也可以叫别的）")]),t._v(" "),a("p",[t._v("2、在此文件夹下新建一个ApiDoc.php文件，内容如下：")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApiDoc")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @title 返回会员信息\n     * @param name:id type:int require:1 desc:唯一id\n     * @return name:id type:int desc:唯一id\n     * @return name:name type:string desc:姓名\n     * @return name:phone type:string desc:电话\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUserInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),a("h4",{attrs:{id:"引用逻辑层注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用逻辑层注释"}},[t._v("#")]),t._v(" 引用逻辑层注释")]),t._v(" "),a("p",[t._v("在控制器的接口注释中的 param 与 retrun 可通过 ref:app\\services\\ApiDoc\\getUserInfo来指定引入逻辑层的注释")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("controller")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApiDocTest")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @title 引入逻辑层注释\n     * @desc 引入业务逻辑层的注释参数\n     * @author HG\n     * @url /apidocTest/service\n     * @method GET\n     * @param ref:app\\services\\ApiDoc\\getUserInfo\n     * @return name:userInfo type:object ref:app\\services\\ApiDoc\\getUserInfo\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),a("p",[t._v("效果如下\n"),a("img",{staticClass:"img-view",staticStyle:{width:"100%"},attrs:{src:t.$withBase("/images/apidoc-api-server-demo.png"),alt:"apidoc-api-server-demo"}})]),t._v(" "),a("h3",{attrs:{id:"模型注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模型注释"}},[t._v("#")]),t._v(" 模型注释")]),t._v(" "),a("p",[t._v("接口参数都与数据表息息相关，很多接口参数均由数据表字段而来。我们可以直接引入指定模型的数据表字段来生成参数说明，省去了一大堆接口注释与维护工作。")]),t._v(" "),a("h4",{attrs:{id:"给数据表字段添加注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#给数据表字段添加注释"}},[t._v("#")]),t._v(" 给数据表字段添加注释")]),t._v(" "),a("p",[t._v("建议为数据表字段添加注释，即让数据表字段可读性更高，也让文档可读性更高。\n我们直接在数据表给相应字段添加注释，如下SQL供参考")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TABLE")]),t._v(" `user` "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("↵  \n  `id` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AUTO_INCREMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'用户id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `username` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'用户名'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `nickname` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'昵称'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `password` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'登录密码'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `avatar` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'头像'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `regip` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bigint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'注册IP'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `update_time` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" unsigned "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'更新时间'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `state` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tinyint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'1'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'状态'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `phone` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'联系电话'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `create_time` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'创建时间'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `sex` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tinyint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" unsigned "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'1'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'性别'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `delete_time` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'删除时间'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `role` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'角色'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `name` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'姓名'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("`id`"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("↵"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ENGINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("MyISAM "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CHARSET")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v('utf8"\n')])])]),a("h4",{attrs:{id:"模型方法的注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模型方法的注释"}},[t._v("#")]),t._v(" 模型方法的注释")]),t._v(" "),a("p",[t._v("可为引入的数据模型方法添加相应注释来实现 field（返回指定字段）、withoutField（排除指定字段）、addField（添加指定字段）")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("书写规范")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("field")]),t._v(" "),a("td",[t._v("返回指定字段")]),t._v(" "),a("td",[t._v("英文格式逗号 , 分开指定的字段")])]),t._v(" "),a("tr",[a("td",[t._v("withoutField")]),t._v(" "),a("td",[t._v("排除指定字段")]),t._v(" "),a("td",[t._v("英文格式逗号 , 分开指定的字段")])]),t._v(" "),a("tr",[a("td",[t._v("addField")]),t._v(" "),a("td",[t._v("添加指定字段")]),t._v(" "),a("td",[t._v("可定义多个，每行为一个参数")])]),t._v(" "),a("tr",[a("td",[t._v("|— name")]),t._v(" "),a("td",[t._v("参数的字段名")]),t._v(" "),a("td",[t._v("如：name:group_name")])]),t._v(" "),a("tr",[a("td",[t._v("|— type")]),t._v(" "),a("td",[t._v("字段类型")]),t._v(" "),a("td",[t._v("int | string | ... 等")])]),t._v(" "),a("tr",[a("td",[t._v("|— default")]),t._v(" "),a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("如：default:1")])]),t._v(" "),a("tr",[a("td",[t._v("|— desc")]),t._v(" "),a("td",[t._v("字段说明文字")]),t._v(" "),a("td")])])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("model")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseModel")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @title 根据id获取明细\n     * @field id,username,nickname,state,sex\n     * @addField name:group_name type:string desc:会员组名称\n     * @addField name:role_name type:string desc:角色名称\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),a("h4",{attrs:{id:"控制器引用模型注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制器引用模型注释"}},[t._v("#")]),t._v(" 控制器引用模型注释")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("controller")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApiDocTest")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @title 引用模型注释\n     * @desc param参数为直接引用模型参数，return则是引用逻辑层，通过逻辑层引用模型参数\n     * @author HG\n     * @url /apidocTest/model\n     * @method GET\n     * @param ref:app\\model\\User\\getInfo\n     * @return name:users type:array ref:app\\services\\ApiDoc\\getUserList\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("model")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),a("img",{staticClass:"img-view",staticStyle:{width:"100%"},attrs:{src:t.$withBase("/images/apidoc-api-model-demo.png"),alt:"apidoc-api-model-demo"}})])}),[],!1,null,null,null);s.default=e.exports}}]);